import { exec } from 'node:child_process'
import logger from '@/library/logger'
import { beforeAll } from 'vitest'
import { initialiseTestGETRequestMaker } from './utilities'

const sendHealthRequest = initialiseTestGETRequestMaker('/health')

async function isServerRunning() {
	try {
		const data = await sendHealthRequest({})
		return data.response.status === 200
	} catch (error) {
		logger.error(error)
		return false
	}
}

beforeAll(async () => {
	exec('pnpm dev', (error) => {
		if (error) {
			throw new Error(`Failed to start server: ${error.message}`)
		}
	})

	let attempts = 0
	while (!(await isServerRunning()) && attempts < 10) {
		await new Promise((resolve) => setTimeout(resolve, 1000))
		attempts++
	}

	if (attempts >= 10) {
		throw new Error('Server failed to start within timeout period')
	}
}, 10000)
